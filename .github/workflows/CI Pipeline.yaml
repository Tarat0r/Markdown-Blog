name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment: development
    defaults:
      run:
        working-directory: ./api

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.24

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('api/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod tidy

      - name: Build the project
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          AUTHORIZATION: ${{ secrets.AUTHORIZATION }}
          STATIC_PATH: ${{ secrets.STATIC_PATH }}
          HOST_ADDRESS: ${{ secrets.HOST_ADDRESS }}
        run: go build ./...

  test:
    name: Test
    runs-on: ubuntu-latest
    environment: development
    needs: build

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    defaults:
      run:
        working-directory: ./api

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.24

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('api/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod tidy

      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Run SQL migration
        run: psql "$DATABASE_URL" -f ../database/markdown_blog.sql
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Run tests
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          AUTHORIZATION: ${{ secrets.AUTHORIZATION }}
          STATIC_PATH: ${{ secrets.STATIC_PATH }}
          HOST_ADDRESS: ${{ secrets.HOST_ADDRESS }}
        run: go test ./tests/handlers_test.go