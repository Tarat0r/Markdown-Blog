name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Установка Go и сборка API
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.24

      - name: Install dependencies
        working-directory: ./api
        run: go mod tidy

      - name: Build the project
        working-directory: ./api
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          AUTHORIZATION: ${{ secrets.AUTHORIZATION }}
          STATIC_PATH: ${{ secrets.STATIC_PATH }}
          HOST_ADDRESS: ${{ secrets.HOST_ADDRESS }}
        run: go build ./...

      # Установка Python и запуск сервисов
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies for Note Sync
        working-directory: ./pc_client
        run: |
          echo "DIRECTORY=${{ secrets.DIRECTORY }}" >> .env
          echo "API_TOKEN=${{ secrets.AUTHORIZATION }}" >> .env
          echo "SERVER_URL=${{ secrets.HOST_ADDRESS }}" >> .env
          echo "STATE_FILE=${{ secrets.STATE_FILE }}" >> .env
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install dependencies for Web Service
        working-directory: ./web_client
        run: |
          echo "API_TOKEN=${{ secrets.AUTHORIZATION }}" >> .env
          echo "SERVER_URL=${{ secrets.HOST_ADDRESS }}" >> .env
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start Note Sync Service
        working-directory: ./pc_client
        run: nohup python main.py &

      - name: Start Web Service
        working-directory: ./web_client
        run: nohup python main.py &

  test:
    name: Test
    runs-on: ubuntu-latest
    environment: development
    needs: build

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.24

      - name: Install dependencies
        working-directory: ./api
        run: go mod tidy

      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Run SQL migration
        run: psql "$DATABASE_URL" -f ./database/markdown_blog.sql
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Run tests
        working-directory: ./api
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          AUTHORIZATION: ${{ secrets.AUTHORIZATION }}
          STATIC_PATH: ${{ secrets.STATIC_PATH }}
          HOST_ADDRESS: ${{ secrets.HOST_ADDRESS }}
        run: go test ./tests/handlers_test.go

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies for Note Sync
        working-directory: ./pc_client
        run: |
          echo "DIRECTORY=${{ secrets.DIRECTORY }}" >> .env
          echo "API_TOKEN=${{ secrets.AUTHORIZATION }}" >> .env
          echo "SERVER_URL=${{ secrets.HOST_ADDRESS }}" >> .env
          echo "STATE_FILE=${{ secrets.STATE_FILE }}" >> .env
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install dependencies for Web Service
        working-directory: ./web_client
        run: |
          echo "API_TOKEN=${{ secrets.AUTHORIZATION }}" >> .env
          echo "SERVER_URL=${{ secrets.HOST_ADDRESS }}" >> .env
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests for Note Sync
        run: |
          python -m unittest pc_client/tests/test.py

      - name: Run tests for Web Service
        run: |
          python -m unittest web_client/tests/test.py

